Search.setIndex({"docnames": ["api", "contributing", "index", "intro", "reference/api/_autosummary/cycquery.base", "reference/api/_autosummary/cycquery.base.DatasetQuerier", "reference/api/_autosummary/cycquery.eicu", "reference/api/_autosummary/cycquery.eicu.EICUQuerier", "reference/api/_autosummary/cycquery.gemini", "reference/api/_autosummary/cycquery.gemini.GEMINIQuerier", "reference/api/_autosummary/cycquery.interface", "reference/api/_autosummary/cycquery.interface.QueryInterface", "reference/api/_autosummary/cycquery.mimiciii", "reference/api/_autosummary/cycquery.mimiciii.MIMICIIIQuerier", "reference/api/_autosummary/cycquery.mimiciv", "reference/api/_autosummary/cycquery.mimiciv.MIMICIVQuerier", "reference/api/_autosummary/cycquery.omop", "reference/api/_autosummary/cycquery.omop.OMOPQuerier", "reference/api/_autosummary/cycquery.ops", "reference/api/_autosummary/cycquery.ops.AddColumn", "reference/api/_autosummary/cycquery.ops.AddDeltaColumn", "reference/api/_autosummary/cycquery.ops.AddDeltaConstant", "reference/api/_autosummary/cycquery.ops.AddNumeric", "reference/api/_autosummary/cycquery.ops.And", "reference/api/_autosummary/cycquery.ops.Apply", "reference/api/_autosummary/cycquery.ops.Cast", "reference/api/_autosummary/cycquery.ops.ConditionAfterDate", "reference/api/_autosummary/cycquery.ops.ConditionBeforeDate", "reference/api/_autosummary/cycquery.ops.ConditionEndsWith", "reference/api/_autosummary/cycquery.ops.ConditionEquals", "reference/api/_autosummary/cycquery.ops.ConditionGreaterThan", "reference/api/_autosummary/cycquery.ops.ConditionIn", "reference/api/_autosummary/cycquery.ops.ConditionInMonths", "reference/api/_autosummary/cycquery.ops.ConditionInYears", "reference/api/_autosummary/cycquery.ops.ConditionLessThan", "reference/api/_autosummary/cycquery.ops.ConditionLike", "reference/api/_autosummary/cycquery.ops.ConditionRegexMatch", "reference/api/_autosummary/cycquery.ops.ConditionStartsWith", "reference/api/_autosummary/cycquery.ops.ConditionSubstring", "reference/api/_autosummary/cycquery.ops.Distinct", "reference/api/_autosummary/cycquery.ops.Drop", "reference/api/_autosummary/cycquery.ops.DropEmpty", "reference/api/_autosummary/cycquery.ops.DropNulls", "reference/api/_autosummary/cycquery.ops.ExtractTimestampComponent", "reference/api/_autosummary/cycquery.ops.FillNull", "reference/api/_autosummary/cycquery.ops.GroupByAggregate", "reference/api/_autosummary/cycquery.ops.Join", "reference/api/_autosummary/cycquery.ops.Keep", "reference/api/_autosummary/cycquery.ops.Limit", "reference/api/_autosummary/cycquery.ops.Literal", "reference/api/_autosummary/cycquery.ops.Or", "reference/api/_autosummary/cycquery.ops.OrderBy", "reference/api/_autosummary/cycquery.ops.QueryOp", "reference/api/_autosummary/cycquery.ops.RandomizeOrder", "reference/api/_autosummary/cycquery.ops.Rename", "reference/api/_autosummary/cycquery.ops.Reorder", "reference/api/_autosummary/cycquery.ops.ReorderAfter", "reference/api/_autosummary/cycquery.ops.Sequential", "reference/api/_autosummary/cycquery.ops.Substring", "reference/api/_autosummary/cycquery.ops.Trim", "reference/api/_autosummary/cycquery.ops.Union", "reference/api/cycquery", "tutorials", "tutorials/eicu", "tutorials/gemini", "tutorials/mimiciii", "tutorials/mimiciv", "tutorials/omop"], "filenames": ["api.rst", "contributing.rst", "index.rst", "intro.rst", "reference/api/_autosummary/cycquery.base.rst", "reference/api/_autosummary/cycquery.base.DatasetQuerier.rst", "reference/api/_autosummary/cycquery.eicu.rst", "reference/api/_autosummary/cycquery.eicu.EICUQuerier.rst", "reference/api/_autosummary/cycquery.gemini.rst", "reference/api/_autosummary/cycquery.gemini.GEMINIQuerier.rst", "reference/api/_autosummary/cycquery.interface.rst", "reference/api/_autosummary/cycquery.interface.QueryInterface.rst", "reference/api/_autosummary/cycquery.mimiciii.rst", "reference/api/_autosummary/cycquery.mimiciii.MIMICIIIQuerier.rst", "reference/api/_autosummary/cycquery.mimiciv.rst", "reference/api/_autosummary/cycquery.mimiciv.MIMICIVQuerier.rst", "reference/api/_autosummary/cycquery.omop.rst", "reference/api/_autosummary/cycquery.omop.OMOPQuerier.rst", "reference/api/_autosummary/cycquery.ops.rst", "reference/api/_autosummary/cycquery.ops.AddColumn.rst", "reference/api/_autosummary/cycquery.ops.AddDeltaColumn.rst", "reference/api/_autosummary/cycquery.ops.AddDeltaConstant.rst", "reference/api/_autosummary/cycquery.ops.AddNumeric.rst", "reference/api/_autosummary/cycquery.ops.And.rst", "reference/api/_autosummary/cycquery.ops.Apply.rst", "reference/api/_autosummary/cycquery.ops.Cast.rst", "reference/api/_autosummary/cycquery.ops.ConditionAfterDate.rst", "reference/api/_autosummary/cycquery.ops.ConditionBeforeDate.rst", "reference/api/_autosummary/cycquery.ops.ConditionEndsWith.rst", "reference/api/_autosummary/cycquery.ops.ConditionEquals.rst", "reference/api/_autosummary/cycquery.ops.ConditionGreaterThan.rst", "reference/api/_autosummary/cycquery.ops.ConditionIn.rst", "reference/api/_autosummary/cycquery.ops.ConditionInMonths.rst", "reference/api/_autosummary/cycquery.ops.ConditionInYears.rst", "reference/api/_autosummary/cycquery.ops.ConditionLessThan.rst", "reference/api/_autosummary/cycquery.ops.ConditionLike.rst", "reference/api/_autosummary/cycquery.ops.ConditionRegexMatch.rst", "reference/api/_autosummary/cycquery.ops.ConditionStartsWith.rst", "reference/api/_autosummary/cycquery.ops.ConditionSubstring.rst", "reference/api/_autosummary/cycquery.ops.Distinct.rst", "reference/api/_autosummary/cycquery.ops.Drop.rst", "reference/api/_autosummary/cycquery.ops.DropEmpty.rst", "reference/api/_autosummary/cycquery.ops.DropNulls.rst", "reference/api/_autosummary/cycquery.ops.ExtractTimestampComponent.rst", "reference/api/_autosummary/cycquery.ops.FillNull.rst", "reference/api/_autosummary/cycquery.ops.GroupByAggregate.rst", "reference/api/_autosummary/cycquery.ops.Join.rst", "reference/api/_autosummary/cycquery.ops.Keep.rst", "reference/api/_autosummary/cycquery.ops.Limit.rst", "reference/api/_autosummary/cycquery.ops.Literal.rst", "reference/api/_autosummary/cycquery.ops.Or.rst", "reference/api/_autosummary/cycquery.ops.OrderBy.rst", "reference/api/_autosummary/cycquery.ops.QueryOp.rst", "reference/api/_autosummary/cycquery.ops.RandomizeOrder.rst", "reference/api/_autosummary/cycquery.ops.Rename.rst", "reference/api/_autosummary/cycquery.ops.Reorder.rst", "reference/api/_autosummary/cycquery.ops.ReorderAfter.rst", "reference/api/_autosummary/cycquery.ops.Sequential.rst", "reference/api/_autosummary/cycquery.ops.Substring.rst", "reference/api/_autosummary/cycquery.ops.Trim.rst", "reference/api/_autosummary/cycquery.ops.Union.rst", "reference/api/cycquery.rst", "tutorials.rst", "tutorials/eicu.ipynb", "tutorials/gemini.ipynb", "tutorials/mimiciii.ipynb", "tutorials/mimiciv.ipynb", "tutorials/omop.ipynb"], "titles": ["API Reference", "Contributing to cyclops-query", "Welcome to cyclops-query\u2019s documentation!", "cyclops-query", "cycquery.base", "cycquery.base.DatasetQuerier", "cycquery.eicu", "cycquery.eicu.EICUQuerier", "cycquery.gemini", "cycquery.gemini.GEMINIQuerier", "cycquery.interface", "cycquery.interface.QueryInterface", "cycquery.mimiciii", "cycquery.mimiciii.MIMICIIIQuerier", "cycquery.mimiciv", "cycquery.mimiciv.MIMICIVQuerier", "cycquery.omop", "cycquery.omop.OMOPQuerier", "cycquery.ops", "cycquery.ops.AddColumn", "cycquery.ops.AddDeltaColumn", "cycquery.ops.AddDeltaConstant", "cycquery.ops.AddNumeric", "cycquery.ops.And", "cycquery.ops.Apply", "cycquery.ops.Cast", "cycquery.ops.ConditionAfterDate", "cycquery.ops.ConditionBeforeDate", "cycquery.ops.ConditionEndsWith", "cycquery.ops.ConditionEquals", "cycquery.ops.ConditionGreaterThan", "cycquery.ops.ConditionIn", "cycquery.ops.ConditionInMonths", "cycquery.ops.ConditionInYears", "cycquery.ops.ConditionLessThan", "cycquery.ops.ConditionLike", "cycquery.ops.ConditionRegexMatch", "cycquery.ops.ConditionStartsWith", "cycquery.ops.ConditionSubstring", "cycquery.ops.Distinct", "cycquery.ops.Drop", "cycquery.ops.DropEmpty", "cycquery.ops.DropNulls", "cycquery.ops.ExtractTimestampComponent", "cycquery.ops.FillNull", "cycquery.ops.GroupByAggregate", "cycquery.ops.Join", "cycquery.ops.Keep", "cycquery.ops.Limit", "cycquery.ops.Literal", "cycquery.ops.Or", "cycquery.ops.OrderBy", "cycquery.ops.QueryOp", "cycquery.ops.RandomizeOrder", "cycquery.ops.Rename", "cycquery.ops.Reorder", "cycquery.ops.ReorderAfter", "cycquery.ops.Sequential", "cycquery.ops.Substring", "cycquery.ops.Trim", "cycquery.ops.Union", "cycquery", "Tutorials", "eICU-CRD tutorial", "GEMINI tutorial", "MIMIC-III tutorial", "MIMIC-IV tutorial", "OMOP tutorial"], "terms": {"cycqueri": [0, 2, 3, 63, 64, 65, 66, 67], "interfac": [0, 9, 13, 15, 17], "queryinterfac": [0, 9, 13, 15, 17], "__init__": [0, 11, 57], "clear_data": [0, 11], "data": [0, 9, 11, 13, 15, 53, 66, 67], "join": [0, 11, 15, 63, 64, 65, 66, 67], "op": [0, 11, 15, 62, 63, 64, 65, 67], "run": [0, 1, 3, 5, 11, 62, 63, 64, 65, 67], "save": [0, 11], "union": [0, 11, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59], "union_al": [0, 11, 60], "addcolumn": 0, "__call__": [0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "adddeltacolumn": [0, 66], "adddeltaconst": 0, "addnumer": 0, "And": [0, 66], "appli": [0, 1, 15, 19, 20, 21, 22, 59], "cast": [0, 5, 7, 9, 11, 13, 15, 17, 64, 66], "conditionafterd": [0, 64, 66, 67], "conditionbefored": [0, 64], "conditionendswith": 0, "conditionequ": [0, 63, 64, 65, 66], "conditiongreaterthan": 0, "conditionin": [0, 23, 50], "conditioninmonth": 0, "conditioninyear": [0, 66], "conditionlessthan": [0, 65], "conditionlik": [0, 23, 50, 66], "conditionregexmatch": [0, 62], "conditionstartswith": 0, "conditionsubstr": [0, 63, 64, 65, 66, 67], "distinct": [0, 64], "drop": [0, 57], "dropempti": [0, 64], "dropnul": 0, "extracttimestampcompon": 0, "fillnul": 0, "groupbyaggreg": [0, 64], "keep": [0, 46, 62], "limit": [0, 11, 53, 62, 65, 66, 67], "liter": [0, 11], "Or": 0, "orderbi": [0, 64], "queryop": [0, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60], "randomizeord": 0, "renam": 0, "reorder": [0, 56], "reorderaft": 0, "sequenti": [0, 11, 63, 64, 65, 66, 67], "__add__": [0, 57], "append": [0, 57], "extend": [0, 57], "insert": [0, 57], "pop": [0, 57], "substr": [0, 38, 62], "trim": 0, "base": [0, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62], "datasetqueri": [0, 7, 9, 13, 15, 17], "db": [0, 5, 64, 66], "get_tabl": [0, 5, 7, 9, 13, 15, 17], "list_column": [0, 5, 7, 9, 13, 15, 17], "list_custom_t": [0, 5, 7, 9, 13, 15, 17, 65], "list_schema": [0, 5, 7, 9, 13, 15, 17, 66, 67], "list_tabl": [0, 5, 7, 9, 13, 15, 17, 63, 64, 67], "dataset": [0, 5, 7, 9, 11, 13, 15, 17, 62], "mimiciii": [0, 65, 67], "mimiciiiqueri": [0, 62, 67], "chartev": [0, 13, 15, 65, 66], "diagnos": [0, 9, 13, 15, 62], "labev": [0, 13, 15, 65], "mimiciv": [0, 66], "mimicivqueri": [0, 62], "patient": [0, 9, 15, 62], "eicu": [0, 2, 62], "eicuqueri": [0, 62], "omop": [0, 2, 62], "omopqueri": [0, 62], "map_concept_ids_to_nam": [0, 17, 67], "measur": [0, 17, 62], "observ": [0, 17, 67], "person": [0, 17, 67], "visit_detail": [0, 17, 67], "visit_occurr": [0, 17, 67], "gemini": [0, 2, 62], "geminiqueri": [0, 62], "care_unit": [0, 9], "imag": [0, 9], "ip_admin": [0, 9], "room_transf": [0, 9], "thank": 1, "your": 1, "interest": 1, "tool": [1, 3, 62, 63, 64, 65, 66, 67], "To": 1, "submit": 1, "pr": 1, "pleas": 1, "fill": [1, 44], "out": 1, "templat": 1, "along": 1, "If": [1, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 51, 59], "fix": 1, "an": [1, 9, 11, 13, 15, 17, 20, 23, 46, 50, 54], "issu": 1, "don": 1, "t": 1, "forget": 1, "link": 1, "onc": 1, "python": [1, 62], "virtual": 1, "environ": [1, 3], "i": [1, 3, 5, 15, 17, 19, 20, 21, 22, 24, 38, 41, 42, 46, 53, 62, 63, 65, 66, 67], "setup": [1, 63, 64, 65, 66, 67], "you": [1, 3, 62], "can": [1, 3, 5, 7, 9, 13, 15, 17, 24, 38], "us": [1, 2, 5, 7, 9, 11, 13, 15, 17, 20, 23, 39, 45, 46, 50, 53, 60, 62, 63, 64, 65, 67], "all": [1, 11, 38, 51, 54, 60, 62, 64], "file": [1, 11], "For": [1, 17], "style": [1, 46], "we": [1, 67], "recommend": 1, "googl": 1, "guid": 1, "black": 1, "format": [1, 11, 26, 27, 46, 67], "docstr": 1, "numpi": 1, "ruff": 1, "further": 1, "static": 1, "analysi": 1, "The": [1, 3, 5, 11, 15, 20, 24, 47, 61, 62, 63, 65, 66, 67], "show": [1, 63, 64, 65, 66, 67], "error": 1, "which": [1, 5, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 67], "need": [1, 58], "befor": [1, 27, 46], "last": 1, "least": 1, "type": [1, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66], "hint": 1, "our": 1, "check": [1, 11, 54], "mypi": 1, "get": [2, 5, 7, 9, 11, 13, 15, 17, 39, 58, 62], "start": [2, 37, 58], "instal": 2, "pip": 2, "develop": 2, "poetri": 2, "contribut": 2, "citat": 2, "pre": 2, "commit": 2, "hook": 2, "code": [2, 63, 65, 66, 67], "guidelin": [2, 3], "tutori": 2, "mimic": [2, 12, 13, 14, 15, 62, 67], "iii": [2, 12, 13, 62, 67], "iv": [2, 14, 62], "crd": [2, 6, 62], "api": [2, 3, 5, 7, 9, 13, 15, 16, 17, 62], "refer": [2, 3], "ehr": [3, 5, 61, 62, 67], "databas": [3, 5, 7, 9, 10, 11, 13, 15, 17, 61, 62, 63, 64, 65, 66, 67], "python3": 3, "m": [3, 65], "set": [3, 11, 62], "up": 3, "henc": 3, "make": [3, 38], "sure": 3, "sourc": [3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "env": 3, "info": [3, 9, 63, 64, 65, 66, 67], "path": [3, 11], "bin": 3, "activ": 3, "In": 3, "order": [3, 11, 51, 53, 55, 56], "depend": 3, "test": [3, 62], "codestyl": 3, "unit": [3, 9], "integr": 3, "built": 3, "sphinx": 3, "local": 3, "doc": 3, "cd": 3, "html": 3, "sphinxopt": 3, "d": 3, "nbsphinx_allow_error": 3, "true": [3, 5, 7, 9, 13, 15, 17, 19, 20, 35, 38, 51, 54, 60, 63, 64, 67], "welcom": 3, "see": 3, "cite": 3, "when": [3, 5, 38, 46, 53], "project": 3, "research": 3, "paper": 3, "articl": 3, "krishnan2022": 3, "12": 3, "02": 3, "22283021": 3, "author": 3, "krishnan": 3, "amrit": 3, "subasri": 3, "vallijah": 3, "mckeen": 3, "kaden": 3, "kore": 3, "ali": 3, "ogidi": 3, "franklin": 3, "alinoori": 3, "mahshid": 3, "lalani": 3, "nadim": 3, "dhalla": 3, "azra": 3, "verma": 3, "amol": 3, "razak": 3, "fahad": 3, "pandya": 3, "deval": 3, "dolatabadi": 3, "elham": 3, "titl": [3, 62], "cyclic": 3, "toward": 3, "operation": 3, "ml": 3, "model": [3, 67], "health": 3, "eloc": 3, "id": [3, 17], "2022": [3, 67], "year": [3, 15, 32, 33, 43, 62, 67], "doi": 3, "10": [3, 48, 62, 63, 65, 67], "1101": 3, "publish": 3, "cold": 3, "spring": 3, "harbor": 3, "laboratori": 3, "press": 3, "url": 3, "http": 3, "www": 3, "medrxiv": 3, "org": 3, "content": 3, "earli": 3, "08": 3, "journal": 3, "querier": [4, 7, 9, 13, 15, 17, 63, 64, 65, 66, 67], "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66], "user": [5, 7, 9, 13, 15, 17, 63, 64, 65, 66, 67], "password": [5, 7, 9, 13, 15, 17, 63, 64, 65, 66, 67], "dbm": [5, 7, 9, 13, 15, 17, 63, 65, 66, 67], "postgresql": [5, 7, 9, 13, 15, 17, 62, 63, 65, 66, 67], "host": [5, 7, 9, 13, 15, 17, 63, 64, 65, 66, 67], "localhost": [5, 7, 9, 13, 15, 17, 63, 65, 66, 67], "port": [5, 7, 9, 13, 15, 17, 63, 65, 66, 67], "5432": [5, 7, 9, 13, 15, 17, 63, 65, 66, 67], "object": [5, 9, 10, 11, 13, 15, 17, 20, 21, 24, 26, 27, 45, 52, 57, 62], "queri": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 48, 50, 52, 57, 61, 62, 63, 64, 65, 67], "orm": [5, 11, 62, 63, 64, 65, 66, 67], "paramet": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67], "str": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 58, 59, 66], "name": [5, 7, 9, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 50, 54, 55, 56, 58, 67], "usernam": [5, 63, 64, 65, 66, 67], "manag": 5, "system": 5, "hostnam": 5, "int": [5, 11, 22, 25, 32, 33, 46, 48, 57, 58], "note": [5, 15, 63, 67], "thi": [5, 22, 38, 45, 46, 63, 64, 65, 66, 67], "intend": 5, "subclass": 5, "provid": [5, 7, 9, 13, 15, 17, 24, 38, 44, 45, 51, 61, 67], "method": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65], "tabl": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67], "automat": 5, "creat": [5, 11, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 59, 62], "ar": [5, 15, 24, 46], "after": [5, 15, 24, 26, 56, 57, 62], "schema": [5, 7, 9, 13, 15, 17, 66, 67], "e": [5, 43, 46, 49], "self": 5, "schema_nam": [5, 7, 9, 13, 15, 17, 67], "table_nam": [5, 7, 9, 13, 15, 17], "instanti": [5, 62], "custom": [5, 7, 9, 13, 15, 17, 65], "build": [5, 62], "cast_timestamp_col": [5, 7, 9, 13, 15, 17], "possibli": [5, 7, 9, 13, 15, 17], "map": [5, 7, 9, 13, 15, 17, 54], "column": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 58, 59], "have": [5, 7, 9, 13, 15, 17, 31, 38, 46, 62], "standard": [5, 7, 9, 13, 15, 17], "allow": [5, 7, 9, 13, 15, 17, 62], "recogn": [5, 7, 9, 13, 15, 17], "downstream": [5, 7, 9, 13, 15, 17], "process": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60], "bool": [5, 7, 9, 11, 13, 15, 17, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 50, 51, 54, 60], "whether": [5, 7, 9, 11, 13, 15, 17, 38, 51, 54, 60], "timestamp": [5, 7, 9, 13, 15, 17, 25, 26, 27, 32, 33, 43, 64], "datetim": [5, 7, 9, 13, 15, 17, 21, 26, 27], "return": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67], "sqlalchemi": [5, 7, 9, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62], "sql": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62], "select": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 66], "subqueri": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "list": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 25, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 55, 56, 57, 59, 63, 64, 65, 66, 67], "none": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 51, 58, 59], "option": [5, 7, 9, 11, 13, 15, 17, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 60], "modul": [6, 8, 12, 14, 15], "support": [6, 12, 14, 25], "care": [9, 15], "fetch": [9, 11], "transfer": 9, "from": [9, 11, 15, 17, 43, 46, 54, 59, 62, 63, 65, 67], "multipl": [9, 23, 24, 45, 50], "construct": [9, 13, 15, 17, 20, 21], "wrap": [9, 10, 11, 13, 15, 17], "diagnosi": [9, 13, 15, 63], "report": [9, 62], "encount": [9, 62], "room": 9, "A": [10, 21, 26, 27, 46], "dataclass": 11, "them": 11, "dbtabl": [11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60], "initi": [11, 57], "chain": [11, 57], "oper": [11, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "attribut": 11, "clear": 11, "contain": [11, 62], "thu": 11, "datafram": [11, 62], "properti": 11, "join_tabl": [11, 46, 63, 65, 66, 67], "on_to_typ": [11, 46], "cond": [11, 46], "table_col": [11, 46], "join_table_col": [11, 46], "isout": [11, 46, 67], "fals": [11, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 50, 51, 60, 64], "anoth": [11, 46, 54, 57], "tupl": [11, 46], "": [11, 17, 24, 44, 63, 64, 65, 66, 67], "binaryexpress": [11, 46], "condit": [11, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 50, 67], "origin": 11, "perform": [11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 67], "outer": [11, 46], "ad": [11, 19, 20, 21, 22, 57], "backend": [11, 66], "panda": [11, 67], "index_col": [11, 66], "n_partit": [11, 66], "No": [11, 67], "row": [11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 48, 51, 53, 62, 64, 65, 66, 67], "dask": [11, 62], "comput": 11, "framework": 11, "becom": [11, 53], "index": [11, 57, 58], "defin": 11, "partit": [11, 62], "should": 11, "server": 11, "ani": [11, 20, 28, 29, 30, 31, 34, 37, 38, 44, 49], "number": [11, 48, 56, 62, 66], "document": 11, "addit": [11, 15], "detail": 11, "result": [11, 57, 63, 65, 66, 67], "file_format": 11, "parquet": 11, "where": [11, 58], "csv": [11, 67], "upstream": 11, "other": [11, 19, 56, 57], "2": [14, 22, 24, 31, 32, 58, 62, 64], "0": [14, 44, 58, 63, 64, 65, 66, 67], "icu": 15, "chart": [15, 62], "event": [15, 62], "argument": [15, 20, 28, 29, 30, 31, 34, 37, 38], "lab": [15, 62, 64], "hospit": [15, 62], "function": [15, 19, 20, 21, 22, 24, 45, 52, 59, 62, 63, 64, 65, 66, 67], "infer": 15, "approxim": 15, "receiv": 15, "anchor_year": 15, "anchor_year_group": 15, "suppli": 15, "dod": 15, "adjust": 15, "src_tabl": 17, "src_col": 17, "dst_col": 17, "concept": [17, 67], "each": [17, 24, 51, 62, 63, 65, 66, 67], "like": [17, 35], "somecol_concept_id": 17, "somecol_concept_nam": 17, "specifi": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 45, 46, 47, 56, 59], "accord": [17, 63, 65, 66, 67], "correspond": [17, 41, 42], "consid": 17, "assign": 17, "add_to": [19, 20, 21, 22], "col": [19, 24, 25, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 49, 51, 55, 56, 58, 59], "neg": [19, 20], "new_col_label": [19, 20, 21, 22, 58, 59], "add": [19, 20, 21, 22, 49, 57], "some": [19, 20, 21, 22, 26, 27, 28, 29, 30, 34, 37, 40, 41, 42, 51, 54, 59], "being": [19, 20, 21, 22, 26, 27, 29, 32, 33], "subtract": [19, 20], "rather": [19, 20], "than": [19, 20, 30, 34, 62], "new": [19, 20, 21, 22, 24, 44, 45, 49, 55, 58, 59], "label": [19, 20, 21, 22, 43, 45, 49, 59, 65, 66], "otherwis": [19, 20, 21, 22, 59], "exist": [19, 20, 21, 22, 54, 59], "exampl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62], "col1": [19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 49, 51, 54, 55, 56, 57, 58, 59], "col2": [19, 20, 21, 22, 24, 25, 40, 41, 42, 44, 46, 47, 51, 55, 56, 57, 59], "col3": [19, 20, 46, 56], "col1_plus_col2": [19, 20], "col1_plus_col3": 19, "col2_plus_col3": 19, "pai": 19, "attent": 19, "combin": [19, 23, 50], "work": 19, "wherea": 19, "delta_kwarg": 20, "interv": 20, "delta": 21, "timedelta": 21, "dai": 21, "1": [21, 22, 24, 26, 27, 29, 30, 31, 32, 34, 44, 49, 62], "col1_plus_1": [21, 22], "numer": 22, "valu": [22, 29, 30, 31, 34, 41, 42, 44, 45, 46, 49], "float": [22, 25], "col2_plus_1": 22, "cond_op": [23, 50], "lab_nam": [23, 35, 45, 50], "hba1c": [23, 35, 50], "john": [23, 50], "jane": [23, 50], "return_cond": [23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 50], "instead": [23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 50], "filter": [23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 50, 62], "func": 24, "new_col": 24, "take": [24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 62], "also": 24, "It": [24, 62], "singl": 24, "assum": [24, 63, 65, 66, 67], "input": 24, "callabl": 24, "lambda": 24, "x": 24, "col1_new": [24, 44, 54], "y": 24, "col2_new": [24, 44], "noqa": 24, "e501": 24, "pylint": 24, "disabl": 24, "line": 24, "too": 24, "long": [24, 62], "type_": 25, "current": 25, "convers": 25, "date": [25, 26, 27], "convert": [25, 46], "must": [25, 31, 32, 33, 38, 45], "timestamp_col": [26, 27, 32, 33, 43], "not_": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "binarize_col": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "yyyi": [26, 27], "mm": [26, 27], "dd": [26, 27], "negat": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "boolean": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "2020": [26, 27, 33, 62], "01": [26, 27, 64, 66, 67], "col1_bool": [26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38], "string": [28, 37, 45, 46, 49, 58, 59, 62], "cond_kwarg": [28, 29, 30, 31, 34, 37, 38], "end": [28, 57, 62], "keyword": [28, 29, 30, 31, 34, 37, 38, 60, 62], "equal": [29, 30, 34], "greater": [30, 34], "includ": [30, 34], "month": [32, 43], "2019": [33, 67], "less": [34, 62], "pattern": 35, "lab_name_bool": 35, "regex": 36, "match": [36, 67], "regular": 36, "express": 36, "default": 37, "any_": 38, "differ": [38, 46], "onli": [38, 46, 47, 62], "one": [38, 62], "just": 38, "b": 38, "person_id": [39, 45, 67], "visit_id": 39, "remov": [41, 42], "empti": 41, "null": [42, 44], "extract_str": 43, "extract": [43, 58, 63, 64, 65, 66, 67], "compon": 43, "time": 43, "inform": 43, "g": [43, 46, 49], "fill_valu": 44, "new_col_nam": [44, 58], "given": [44, 57], "groupby_col": 45, "aggfunc": 45, "aggsep": 45, "aggreg": [45, 62], "over": 45, "group": 45, "dict": [45, 54], "sequenc": [45, 57], "dictionari": 45, "kei": [45, 54, 57], "pair": 45, "prevent": 45, "same": [45, 46], "string_aggfunc": 45, "separ": 45, "string_agg": 45, "count": [45, 64], "visit_count": 45, "lab_name_agg": 45, "repres": 46, "both": 46, "suggest": 46, "oppos": 46, "two": [46, 57, 60], "flag": 46, "sai": 46, "left": 46, "table2": [46, 60], "table1": [46, 60], "neither": 46, "nor": 46, "expens": 46, "cartesian": 46, "product": 46, "integ": 49, "OR": 50, "ascend": [51, 64], "sort": [51, 62], "descend": 51, "arg": [52, 53, 57], "kwarg": [52, 53], "abstract": 52, "implement": 52, "call": 52, "random": 53, "so": 53, "certain": 53, "cannot": 53, "seen": 53, "analyz": 53, "quit": 53, "slow": 53, "larg": 53, "rename_map": 54, "check_exist": 54, "complet": 55, "come": 56, "follow": [56, 67], "ordereddict": 57, "execut": [57, 63, 64, 65, 66, 67], "final": 57, "op_": 57, "slice": 57, "start_index": 58, "stop_index": 58, "ha": 58, "stop": 58, "col1_substr": 58, "whitespac": 59, "col1_trim": 59, "col2_trim": 59, "union_t": 60, "first": [60, 63, 65, 66, 67], "cyclop": [62, 63, 64, 65, 67], "commun": 62, "wrapper": 62, "around": 62, "import": 62, "male": 62, "mortal": 62, "outcom": 62, "femal": 62, "gastroenter": 62, "icd": 62, "9": [62, 67], "3": [62, 64, 67], "potassium": 62, "4": [62, 64, 67], "aado2": 62, "carevu": 62, "valuenum": 62, "20": 62, "admiss": [62, 65], "2021": [62, 67], "later": 62, "approx": 62, "schizophrenia": 62, "2015": [62, 67], "advanc": 62, "chronic": 62, "routin": 62, "vital": [62, 64], "sign": 62, "5": [62, 63, 64, 65, 67], "hemoglobin": 62, "2009": 62, "6": [62, 64, 65, 67], "radiologi": [62, 64], "lymphadenopathi": 62, "infecti": 62, "occur": 62, "togeth": 62, "7": [62, 64, 67], "lazi": 62, "evalu": 62, "batch": 62, "subject_id": [62, 65], "8": [62, 67], "raw": 62, "discharg": 62, "2014": [62, 67], "100": [62, 65, 66, 67], "diagnosisstr": 62, "teach": 62, "glucos": 62, "medic": 62, "search": 62, "visit": 62, "2010": 62, "sepsi": 62, "1a": 62, "per": 62, "most": 62, "recent": 62, "patient_id_hash": 62, "discharge_date_tim": 62, "record": 62, "1b": 62, "abov": 62, "subset": 62, "who": 62, "were": 62, "between": 62, "april": 62, "march": 62, "31": 62, "2016": [62, 67], "1c": 62, "total": 62, "2a": 62, "how": [62, 63, 65, 66, 67], "mani": 62, "sodium": 62, "place": 62, "apr": 62, "mai": 62, "101": 62, "notebook": [63, 64, 65, 66, 67], "quick": [63, 65, 66, 67], "instruct": [63, 65, 66, 67], "postgr": [63, 65, 66, 67], "updat": [63, 65, 66, 67], "config": [63, 65, 66, 67], "pass": [63, 65, 66, 67], "accordingli": [63, 65, 66, 67], "qo": [63, 64, 65, 66, 67], "pwd": [63, 65, 66, 67], "eicu_crd": 63, "2023": [63, 64, 65, 66, 67], "27": [63, 65, 66, 67], "49": [63, 65, 66], "18": 63, "532": 63, "readi": [63, 64, 65, 66, 67], "39": [63, 64, 65, 66, 67], "admissiondrug": 63, "admissiondx": 63, "allergi": 63, "apacheapsvar": 63, "apachepatientresult": 63, "apachepredvar": 63, "careplancareprovid": 63, "careplaneol": 63, "careplangener": 63, "careplango": 63, "careplaninfectiousdiseas": 63, "customlab": 63, "infusiondrug": 63, "intakeoutput": 63, "microlab": 63, "nurseassess": 63, "nursecar": 63, "nursechart": 63, "pasthistori": 63, "physicalexam": 63, "respiratorycar": 63, "respiratorychart": 63, "treatment": 63, "vitalaperiod": 63, "vitalperiod": 63, "hospitaldischargeyear": 63, "gender": [63, 65, 66], "print": [63, 64, 65, 66, 67], "f": [63, 64, 65, 66, 67], "len": [63, 64, 65, 66, 67], "848": 63, "successfulli": [63, 64, 65, 66, 67], "849": 63, "util": [63, 64, 65, 66, 67], "profil": [63, 64, 65, 66, 67], "finish": [63, 64, 65, 66, 67], "run_queri": [63, 64, 65, 66, 67], "041219": 63, "patient_diagnos": 63, "patientunitstayid": 63, "926": 63, "927": 63, "064732": 63, "teachingstatu": 63, "hospitalid": 63, "labnam": 63, "patient_lab": [63, 65], "976": 63, "977": 63, "029084": 63, "drugnam": 63, "patient_med": 63, "19": [63, 64], "229": 63, "230": 63, "231420": 63, "hpc": 64, "ca": 64, "delirium_v4_0_1": 64, "public": [64, 66, 67], "09": 64, "21": [64, 66], "17": [64, 67], "45": 64, "449": 64, "lookup_icd10_ca_descript": 64, "lookup_statcan": 64, "lookup_cci": 64, "lookup_icd10_ca_to_ccsr": 64, "lookup_ip_administr": 64, "lookup_lab_concept": 64, "lookup_vitals_concept": 64, "lookup_pharmacy_concept": 64, "lookup_diagnosi": 64, "locality_vari": 64, "admdad": 64, "derived_vari": 64, "ipscu": 64, "lookup_phy_characterist": 64, "ipintervent": 64, "lookup_ccsr": 64, "lookup_pharmacy_rout": 64, "lookup_transfusion_concept": 64, "lookup_ip_scu": 64, "lookup_er_administr": 64, "lookup_imag": 64, "pharmaci": 64, "lookup_transf": 64, "ipdiagnosi": 64, "lookup_room_transf": 64, "er": 64, "erdiagnosi": 64, "erintervent": 64, "roomtransf": 64, "transfus": 64, "lookup_hospital_num": 64, "51": 64, "902": 64, "903": 64, "093352": 64, "189734": 64, "04": 64, "03": 64, "encounters_queri": 64, "52": [64, 66], "591": 64, "592": 64, "675141": 64, "32567": 64, "hospital_num": 64, "encounters_per_sit": 64, "856": 64, "857": 64, "145693": 64, "lab_op": 64, "collection_date_tim": 64, "05": 64, "test_type_map": 64, "encounters_lab": 64, "genc_id": 64, "sodium_test": 64, "26": [64, 65, 67], "814": 64, "815": 64, "506": 64, "939296": 64, "9305": 64, "v1": [65, 67], "482": 65, "expire_flag": 65, "29": 65, "772": 65, "773": 65, "032520": 65, "patient_admiss": [65, 66], "long_titl": [65, 66], "patient_admissions_diagnos": [65, 66], "hadm_id": [65, 66], "30": 65, "046": 65, "047": 65, "246741": 65, "112": 65, "113": 65, "045873": 65, "chartevents_op": 65, "dbsourc": 65, "chart_ev": [65, 66], "patient_chart_ev": 65, "50": [65, 66], "323": 65, "325": 65, "69": 65, "174677": 65, "v2": [66, 67], "43": 66, "581": 66, "fhir_etl": 66, "fhir_trm": 66, "information_schema": [66, 67], "mimic_fhir": 66, "mimiciv_deriv": 66, "mimiciv_": 66, "mimiciv_hosp": 66, "mimiciv_icu": 66, "mimiciv_not": 66, "admittim": 66, "dischtim": 66, "anchor_year_differ": 66, "46": 66, "619": 66, "621": 66, "297889": 66, "diagnoses_op": 66, "icd_vers": 66, "47": 66, "471": 66, "472": 66, "810802": 66, "r": 66, "008": 66, "009": 66, "492522": 66, "82": 66, "categori": 66, "patient_admissions_vit": 66, "07": 66, "605": 66, "606": 66, "78": 66, "553554": 66, "patient_admissions_lab": 66, "53": [66, 67], "13": [66, 67], "936": 66, "938": 66, "66": 66, "295008": 66, "radiology_not": 66, "radiology_notes_op": 66, "text": 66, "patient_admissions_radiology_not": 66, "266": 66, "267": 66, "291682": 66, "npartit": 66, "671": 66, "672": 66, "376261": 66, "35639": 66, "lt": 66, "core": 66, "gt": 66, "22": 66, "544": 66, "545": 66, "008508": 66, "common": 67, "showcas": 67, "synthea": 67, "gener": 67, "releas": 67, "etl": 67, "load": 67, "hous": 67, "pd": 67, "synthea_integration_test": 67, "cdm_synthea10": 67, "587": 67, "observation_period": 67, "condition_occurr": 67, "drug_exposur": 67, "procedure_occurr": 67, "device_exposur": 67, "death": 67, "note_nlp": 67, "specimen": 67, "fact_relationship": 67, "locat": 67, "care_sit": 67, "payer_plan_period": 67, "cost": 67, "drug_era": 67, "dose_era": 67, "condition_era": 67, "episod": 67, "episode_ev": 67, "cdm_sourc": 67, "vocabulari": 67, "domain": 67, "concept_class": 67, "concept_relationship": 67, "relationship": 67, "concept_synonym": 67, "concept_ancestor": 67, "source_to_concept_map": 67, "drug_strength": 67, "cohort": 67, "cohort_definit": 67, "source_to_standard_vocab_map": 67, "source_to_source_vocab_map": 67, "all_visit": 67, "assign_all_visit_id": 67, "final_visit_id": 67, "visit_start_d": 67, "to_datetim": 67, "dt": 67, "value_count": 67, "sort_index": 67, "761": 67, "762": 67, "042454": 67, "2011": 67, "2012": 67, "2013": 67, "15": 67, "2017": 67, "2018": 67, "dtype": 67, "int64": 67, "visits_measur": 67, "visit_occurrence_id": 67, "861": 67, "863": 67, "053943": 67, "repo": 67, "32": 67, "877": 67, "visits_concept_map": 67, "discharge_to_concept_id": 67, "admitting_concept_id": 67, "visits_concept_mapped_di": 67, "discharge_to_concept_nam": 67, "di": 67, "156": 67, "961510": 67, "5815": 67, "gender_concept_nam": 67, "person_visit": 67, "person_visits_condit": 67, "person_visits_conditions_measur": 67, "condition_concept_id": 67, "condition_concept_nam": 67, "56": 67, "588": 67, "355149": 67, "measurement_concept_nam": 67, "95": 67, "bodi": 67, "temperatur": 67}, "objects": {"": [[61, 0, 0, "-", "cycquery"]], "cycquery": [[4, 0, 0, "-", "base"], [6, 0, 0, "-", "eicu"], [8, 0, 0, "-", "gemini"], [10, 0, 0, "-", "interface"], [12, 0, 0, "-", "mimiciii"], [14, 0, 0, "-", "mimiciv"], [16, 0, 0, "-", "omop"], [18, 0, 0, "-", "ops"]], "cycquery.base": [[5, 1, 1, "", "DatasetQuerier"]], "cycquery.base.DatasetQuerier": [[5, 2, 1, "", "db"], [5, 3, 1, "", "get_table"], [5, 3, 1, "", "list_columns"], [5, 3, 1, "", "list_custom_tables"], [5, 3, 1, "", "list_schemas"], [5, 3, 1, "", "list_tables"]], "cycquery.eicu": [[7, 1, 1, "", "EICUQuerier"]], "cycquery.eicu.EICUQuerier": [[7, 3, 1, "", "get_table"], [7, 3, 1, "", "list_columns"], [7, 3, 1, "", "list_custom_tables"], [7, 3, 1, "", "list_schemas"], [7, 3, 1, "", "list_tables"]], "cycquery.gemini": [[9, 1, 1, "", "GEMINIQuerier"]], "cycquery.gemini.GEMINIQuerier": [[9, 3, 1, "", "care_units"], [9, 3, 1, "", "diagnoses"], [9, 3, 1, "", "get_table"], [9, 3, 1, "", "imaging"], [9, 3, 1, "", "ip_admin"], [9, 3, 1, "", "list_columns"], [9, 3, 1, "", "list_custom_tables"], [9, 3, 1, "", "list_schemas"], [9, 3, 1, "", "list_tables"], [9, 3, 1, "", "room_transfer"]], "cycquery.interface": [[11, 1, 1, "", "QueryInterface"]], "cycquery.interface.QueryInterface": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "clear_data"], [11, 4, 1, "", "data"], [11, 3, 1, "", "join"], [11, 3, 1, "", "ops"], [11, 3, 1, "", "run"], [11, 3, 1, "", "save"], [11, 3, 1, "", "union"], [11, 3, 1, "", "union_all"]], "cycquery.mimiciii": [[13, 1, 1, "", "MIMICIIIQuerier"]], "cycquery.mimiciii.MIMICIIIQuerier": [[13, 3, 1, "", "chartevents"], [13, 3, 1, "", "diagnoses"], [13, 3, 1, "", "get_table"], [13, 3, 1, "", "labevents"], [13, 3, 1, "", "list_columns"], [13, 3, 1, "", "list_custom_tables"], [13, 3, 1, "", "list_schemas"], [13, 3, 1, "", "list_tables"]], "cycquery.mimiciv": [[15, 1, 1, "", "MIMICIVQuerier"]], "cycquery.mimiciv.MIMICIVQuerier": [[15, 3, 1, "", "chartevents"], [15, 3, 1, "", "diagnoses"], [15, 3, 1, "", "get_table"], [15, 3, 1, "", "labevents"], [15, 3, 1, "", "list_columns"], [15, 3, 1, "", "list_custom_tables"], [15, 3, 1, "", "list_schemas"], [15, 3, 1, "", "list_tables"], [15, 3, 1, "", "patients"]], "cycquery.omop": [[17, 1, 1, "", "OMOPQuerier"]], "cycquery.omop.OMOPQuerier": [[17, 3, 1, "", "get_table"], [17, 3, 1, "", "list_columns"], [17, 3, 1, "", "list_custom_tables"], [17, 3, 1, "", "list_schemas"], [17, 3, 1, "", "list_tables"], [17, 3, 1, "", "map_concept_ids_to_name"], [17, 3, 1, "", "measurement"], [17, 3, 1, "", "observation"], [17, 3, 1, "", "person"], [17, 3, 1, "", "visit_detail"], [17, 3, 1, "", "visit_occurrence"]], "cycquery.ops": [[19, 1, 1, "", "AddColumn"], [20, 1, 1, "", "AddDeltaColumn"], [21, 1, 1, "", "AddDeltaConstant"], [22, 1, 1, "", "AddNumeric"], [23, 1, 1, "", "And"], [24, 1, 1, "", "Apply"], [25, 1, 1, "", "Cast"], [26, 1, 1, "", "ConditionAfterDate"], [27, 1, 1, "", "ConditionBeforeDate"], [28, 1, 1, "", "ConditionEndsWith"], [29, 1, 1, "", "ConditionEquals"], [30, 1, 1, "", "ConditionGreaterThan"], [31, 1, 1, "", "ConditionIn"], [32, 1, 1, "", "ConditionInMonths"], [33, 1, 1, "", "ConditionInYears"], [34, 1, 1, "", "ConditionLessThan"], [35, 1, 1, "", "ConditionLike"], [36, 1, 1, "", "ConditionRegexMatch"], [37, 1, 1, "", "ConditionStartsWith"], [38, 1, 1, "", "ConditionSubstring"], [39, 1, 1, "", "Distinct"], [40, 1, 1, "", "Drop"], [41, 1, 1, "", "DropEmpty"], [42, 1, 1, "", "DropNulls"], [43, 1, 1, "", "ExtractTimestampComponent"], [44, 1, 1, "", "FillNull"], [45, 1, 1, "", "GroupByAggregate"], [46, 1, 1, "", "Join"], [47, 1, 1, "", "Keep"], [48, 1, 1, "", "Limit"], [49, 1, 1, "", "Literal"], [50, 1, 1, "", "Or"], [51, 1, 1, "", "OrderBy"], [52, 1, 1, "", "QueryOp"], [53, 1, 1, "", "RandomizeOrder"], [54, 1, 1, "", "Rename"], [55, 1, 1, "", "Reorder"], [56, 1, 1, "", "ReorderAfter"], [57, 1, 1, "", "Sequential"], [58, 1, 1, "", "Substring"], [59, 1, 1, "", "Trim"], [60, 1, 1, "", "Union"]], "cycquery.ops.AddColumn": [[19, 3, 1, "", "__call__"]], "cycquery.ops.AddDeltaColumn": [[20, 3, 1, "", "__call__"]], "cycquery.ops.AddDeltaConstant": [[21, 3, 1, "", "__call__"]], "cycquery.ops.AddNumeric": [[22, 3, 1, "", "__call__"]], "cycquery.ops.And": [[23, 3, 1, "", "__call__"]], "cycquery.ops.Apply": [[24, 3, 1, "", "__call__"]], "cycquery.ops.Cast": [[25, 3, 1, "", "__call__"]], "cycquery.ops.ConditionAfterDate": [[26, 3, 1, "", "__call__"]], "cycquery.ops.ConditionBeforeDate": [[27, 3, 1, "", "__call__"]], "cycquery.ops.ConditionEndsWith": [[28, 3, 1, "", "__call__"]], "cycquery.ops.ConditionEquals": [[29, 3, 1, "", "__call__"]], "cycquery.ops.ConditionGreaterThan": [[30, 3, 1, "", "__call__"]], "cycquery.ops.ConditionIn": [[31, 3, 1, "", "__call__"]], "cycquery.ops.ConditionInMonths": [[32, 3, 1, "", "__call__"]], "cycquery.ops.ConditionInYears": [[33, 3, 1, "", "__call__"]], "cycquery.ops.ConditionLessThan": [[34, 3, 1, "", "__call__"]], "cycquery.ops.ConditionLike": [[35, 3, 1, "", "__call__"]], "cycquery.ops.ConditionRegexMatch": [[36, 3, 1, "", "__call__"]], "cycquery.ops.ConditionStartsWith": [[37, 3, 1, "", "__call__"]], "cycquery.ops.ConditionSubstring": [[38, 3, 1, "", "__call__"]], "cycquery.ops.Distinct": [[39, 3, 1, "", "__call__"]], "cycquery.ops.Drop": [[40, 3, 1, "", "__call__"]], "cycquery.ops.DropEmpty": [[41, 3, 1, "", "__call__"]], "cycquery.ops.DropNulls": [[42, 3, 1, "", "__call__"]], "cycquery.ops.ExtractTimestampComponent": [[43, 3, 1, "", "__call__"]], "cycquery.ops.FillNull": [[44, 3, 1, "", "__call__"]], "cycquery.ops.GroupByAggregate": [[45, 3, 1, "", "__call__"]], "cycquery.ops.Join": [[46, 3, 1, "", "__call__"]], "cycquery.ops.Keep": [[47, 3, 1, "", "__call__"]], "cycquery.ops.Limit": [[48, 3, 1, "", "__call__"]], "cycquery.ops.Literal": [[49, 3, 1, "", "__call__"]], "cycquery.ops.Or": [[50, 3, 1, "", "__call__"]], "cycquery.ops.OrderBy": [[51, 3, 1, "", "__call__"]], "cycquery.ops.QueryOp": [[52, 3, 1, "", "__call__"]], "cycquery.ops.RandomizeOrder": [[53, 3, 1, "", "__call__"]], "cycquery.ops.Rename": [[54, 3, 1, "", "__call__"]], "cycquery.ops.Reorder": [[55, 3, 1, "", "__call__"]], "cycquery.ops.ReorderAfter": [[56, 3, 1, "", "__call__"]], "cycquery.ops.Sequential": [[57, 3, 1, "", "__add__"], [57, 3, 1, "", "__call__"], [57, 3, 1, "", "__init__"], [57, 3, 1, "", "append"], [57, 3, 1, "", "extend"], [57, 3, 1, "", "insert"], [57, 3, 1, "", "pop"]], "cycquery.ops.Substring": [[58, 3, 1, "", "__call__"]], "cycquery.ops.Trim": [[59, 3, 1, "", "__call__"]], "cycquery.ops.Union": [[60, 3, 1, "", "__call__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"api": [0, 61], "refer": 0, "contribut": [1, 3], "cyclop": [1, 2, 3, 66], "queri": [1, 2, 3, 66], "pre": 1, "commit": 1, "hook": 1, "code": 1, "guidelin": 1, "welcom": 2, "": 2, "document": [2, 3], "content": 2, "get": [3, 63, 64, 65, 66, 67], "start": 3, "instal": 3, "us": [3, 66], "pip": 3, "develop": 3, "poetri": 3, "citat": 3, "cycqueri": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "base": [4, 5, 66], "datasetqueri": 5, "eicu": [6, 7, 63], "eicuqueri": [7, 63], "gemini": [8, 9, 64], "geminiqueri": [9, 64], "interfac": [10, 11], "queryinterfac": 11, "mimiciii": [12, 13], "mimiciiiqueri": [13, 65], "mimiciv": [14, 15], "mimicivqueri": [15, 66], "omop": [16, 17, 67], "omopqueri": [17, 67], "op": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66], "addcolumn": 19, "adddeltacolumn": 20, "adddeltaconst": 21, "addnumer": 22, "And": 23, "appli": 24, "cast": 25, "conditionafterd": 26, "conditionbefored": 27, "conditionendswith": 28, "conditionequ": 29, "conditiongreaterthan": 30, "conditionin": 31, "conditioninmonth": 32, "conditioninyear": 33, "conditionlessthan": 34, "conditionlik": 35, "conditionregexmatch": [36, 66], "conditionstartswith": 37, "conditionsubstr": 38, "distinct": 39, "drop": 40, "dropempti": 41, "dropnul": 42, "extracttimestampcompon": 43, "fillnul": 44, "groupbyaggreg": 45, "join": 46, "keep": [47, 64], "limit": [48, 63], "liter": 49, "Or": 50, "orderbi": 51, "queryop": 52, "randomizeord": 53, "renam": 54, "reorder": 55, "reorderaft": 56, "sequenti": 57, "substr": [58, 63], "trim": 59, "union": 60, "dataset": [61, 64], "tutori": [62, 63, 64, 65, 66, 67], "crd": 63, "import": [63, 64, 65, 66, 67], "instanti": [63, 64, 65, 66, 67], "exampl": [63, 64, 65, 66, 67], "1": [63, 64, 65, 66, 67], "all": [63, 65, 66, 67], "femal": [63, 65, 66, 67], "patient": [63, 64, 65, 66, 67], "discharg": [63, 64], "2014": 63, "100": 63, "row": 63, "2": [63, 65, 66, 67], "encount": [63, 64, 65, 66], "diagnos": [63, 65, 66, 67], "schizophrenia": [63, 66], "diagnosisstr": 63, "year": [63, 66], "2015": [63, 64, 66], "3": [63, 65, 66], "potassium": [63, 65], "lab": [63, 65, 66], "test": [63, 64, 65, 66], "teach": 63, "hospit": [63, 64], "4": [63, 65, 66], "glucos": 63, "medic": 63, "search": 63, "1a": 64, "creat": 64, "tabl": 64, "onli": 64, "one": 64, "per": 64, "most": 64, "recent": 64, "each": 64, "sort": 64, "patient_id_hash": 64, "discharge_date_tim": 64, "record": 64, "1b": 64, "from": [64, 66], "abov": 64, "set": 64, "take": 64, "subset": 64, "who": 64, "were": 64, "between": 64, "april": 64, "march": 64, "31": 64, "2016": 64, "1c": 64, "total": 64, "number": 64, "admiss": [64, 66], "2a": 64, "how": 64, "mani": 64, "sodium": 64, "place": 64, "apr": 64, "mai": 64, "101": 64, "mimic": [65, 66], "iii": 65, "male": 65, "mortal": [65, 67], "outcom": [65, 67], "gastroenter": 65, "icd": [65, 66], "9": [65, 66], "long": [65, 66], "titl": [65, 66], "aado2": 65, "carevu": 65, "chart": 65, "event": 65, "have": 65, "valuenum": 65, "less": 65, "than": 65, "20": 65, "iv": 66, "2021": 66, "later": 66, "approx": 66, "10": 66, "advanc": 66, "contain": 66, "chronic": 66, "routin": 66, "vital": 66, "sign": 66, "5": 66, "hemoglobin": 66, "2009": 66, "6": 66, "radiologi": 66, "report": 66, "filter": 66, "keyword": 66, "lymphadenopathi": 66, "infecti": 66, "occur": 66, "togeth": 66, "7": 66, "return": 66, "dask": 66, "datafram": 66, "lazi": 66, "evalu": 66, "partit": 66, "batch": 66, "aggreg": 66, "subject_id": 66, "8": 66, "run": 66, "raw": 66, "sql": 66, "string": 66, "visit": 67, "after": 67, "2010": 67, "measur": 67, "2020": 67, "end": 67, "sepsi": 67}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "Contributing to cyclops-query": [[1, "contributing-to-cyclops-query"]], "Pre-commit hooks": [[1, "pre-commit-hooks"]], "Coding guidelines": [[1, "coding-guidelines"]], "Welcome to cyclops-query\u2019s documentation!": [[2, "welcome-to-cyclops-query-s-documentation"]], "Contents:": [[2, null]], "cyclops-query": [[3, "cyclops-query"]], "\ud83d\udc23 Getting Started": [[3, "getting-started"]], "Installing cyclops-query using pip": [[3, "installing-cyclops-query-using-pip"]], "\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udcbb Developing": [[3, "developing"]], "Using poetry": [[3, "using-poetry"]], "Contributing": [[3, "contributing"]], "\ud83d\udcda Documentation": [[3, "documentation"]], "\ud83c\udf93 Citation": [[3, "citation"]], "cycquery.base": [[4, "module-cycquery.base"]], "cycquery.base.DatasetQuerier": [[5, "cycquery-base-datasetquerier"]], "cycquery.eicu": [[6, "module-cycquery.eicu"]], "cycquery.eicu.EICUQuerier": [[7, "cycquery-eicu-eicuquerier"]], "cycquery.gemini": [[8, "module-cycquery.gemini"]], "cycquery.gemini.GEMINIQuerier": [[9, "cycquery-gemini-geminiquerier"]], "cycquery.interface": [[10, "module-cycquery.interface"]], "cycquery.interface.QueryInterface": [[11, "cycquery-interface-queryinterface"]], "cycquery.mimiciii": [[12, "module-cycquery.mimiciii"]], "cycquery.mimiciii.MIMICIIIQuerier": [[13, "cycquery-mimiciii-mimiciiiquerier"]], "cycquery.mimiciv": [[14, "module-cycquery.mimiciv"]], "cycquery.mimiciv.MIMICIVQuerier": [[15, "cycquery-mimiciv-mimicivquerier"]], "cycquery.omop": [[16, "module-cycquery.omop"]], "cycquery.omop.OMOPQuerier": [[17, "cycquery-omop-omopquerier"]], "cycquery.ops": [[18, "module-cycquery.ops"]], "cycquery.ops.AddColumn": [[19, "cycquery-ops-addcolumn"]], "cycquery.ops.AddDeltaColumn": [[20, "cycquery-ops-adddeltacolumn"]], "cycquery.ops.AddDeltaConstant": [[21, "cycquery-ops-adddeltaconstant"]], "cycquery.ops.AddNumeric": [[22, "cycquery-ops-addnumeric"]], "cycquery.ops.And": [[23, "cycquery-ops-and"]], "cycquery.ops.Apply": [[24, "cycquery-ops-apply"]], "cycquery.ops.Cast": [[25, "cycquery-ops-cast"]], "cycquery.ops.ConditionAfterDate": [[26, "cycquery-ops-conditionafterdate"]], "cycquery.ops.ConditionBeforeDate": [[27, "cycquery-ops-conditionbeforedate"]], "cycquery.ops.ConditionEndsWith": [[28, "cycquery-ops-conditionendswith"]], "cycquery.ops.ConditionEquals": [[29, "cycquery-ops-conditionequals"]], "cycquery.ops.ConditionGreaterThan": [[30, "cycquery-ops-conditiongreaterthan"]], "cycquery.ops.ConditionIn": [[31, "cycquery-ops-conditionin"]], "cycquery.ops.ConditionInMonths": [[32, "cycquery-ops-conditioninmonths"]], "cycquery.ops.ConditionInYears": [[33, "cycquery-ops-conditioninyears"]], "cycquery.ops.ConditionLessThan": [[34, "cycquery-ops-conditionlessthan"]], "cycquery.ops.ConditionLike": [[35, "cycquery-ops-conditionlike"]], "cycquery.ops.ConditionRegexMatch": [[36, "cycquery-ops-conditionregexmatch"]], "cycquery.ops.ConditionStartsWith": [[37, "cycquery-ops-conditionstartswith"]], "cycquery.ops.ConditionSubstring": [[38, "cycquery-ops-conditionsubstring"]], "cycquery.ops.Distinct": [[39, "cycquery-ops-distinct"]], "cycquery.ops.Drop": [[40, "cycquery-ops-drop"]], "cycquery.ops.DropEmpty": [[41, "cycquery-ops-dropempty"]], "cycquery.ops.DropNulls": [[42, "cycquery-ops-dropnulls"]], "cycquery.ops.ExtractTimestampComponent": [[43, "cycquery-ops-extracttimestampcomponent"]], "cycquery.ops.FillNull": [[44, "cycquery-ops-fillnull"]], "cycquery.ops.GroupByAggregate": [[45, "cycquery-ops-groupbyaggregate"]], "cycquery.ops.Join": [[46, "cycquery-ops-join"]], "cycquery.ops.Keep": [[47, "cycquery-ops-keep"]], "cycquery.ops.Limit": [[48, "cycquery-ops-limit"]], "cycquery.ops.Literal": [[49, "cycquery-ops-literal"]], "cycquery.ops.Or": [[50, "cycquery-ops-or"]], "cycquery.ops.OrderBy": [[51, "cycquery-ops-orderby"]], "cycquery.ops.QueryOp": [[52, "cycquery-ops-queryop"]], "cycquery.ops.RandomizeOrder": [[53, "cycquery-ops-randomizeorder"]], "cycquery.ops.Rename": [[54, "cycquery-ops-rename"]], "cycquery.ops.Reorder": [[55, "cycquery-ops-reorder"]], "cycquery.ops.ReorderAfter": [[56, "cycquery-ops-reorderafter"]], "cycquery.ops.Sequential": [[57, "cycquery-ops-sequential"]], "cycquery.ops.Substring": [[58, "cycquery-ops-substring"]], "cycquery.ops.Trim": [[59, "cycquery-ops-trim"]], "cycquery.ops.Union": [[60, "cycquery-ops-union"]], "cycquery": [[61, "module-cycquery"]], "dataset APIs": [[61, "dataset-apis"]], "Tutorials": [[62, "tutorials"]], "eICU-CRD tutorial": [[63, "eICU-CRD-tutorial"]], "Imports and instantiate EICUQuerier": [[63, "Imports-and-instantiate-EICUQuerier"]], "Example 1. Get all female patients discharged in 2014 (limit to 100 rows).": [[63, "Example-1.-Get-all-female-patients-discharged-in-2014-(limit-to-100-rows)."]], "Example 2. Get all patient encounters with diagnoses (schizophrenia in diagnosisstring), discharged in the year 2015.": [[63, "Example-2.-Get-all-patient-encounters-with-diagnoses-(schizophrenia-in-diagnosisstring),-discharged-in-the-year-2015."]], "Example 3. Get potassium lab tests for patients discharged in the year 2014, for all teaching hospitals.": [[63, "Example-3.-Get-potassium-lab-tests-for-patients-discharged-in-the-year-2014,-for-all-teaching-hospitals."]], "Example 4. Get glucose medications (substring search) for female patients discharged in 2014.": [[63, "Example-4.-Get-glucose-medications-(substring-search)-for-female-patients-discharged-in-2014."]], "GEMINI tutorial": [[64, "GEMINI-tutorial"]], "Imports and instantiate GEMINIQuerier.": [[64, "Imports-and-instantiate-GEMINIQuerier."]], "Example 1a. Create a table with only one hospitalization per patient, keeping the most recent encounter for each patient. Sort the dataset by patient_id_hashed and discharge_date_time, and then keep the recent record.": [[64, "Example-1a.-Create-a-table-with-only-one-hospitalization-per-patient,-keeping-the-most-recent-encounter-for-each-patient.-Sort-the-dataset-by-patient_id_hashed-and-discharge_date_time,-and-then-keep-the-recent-record."]], "Example 1b. From the above set of encounters, take a subset of patients who were discharged between April 1, 2015 and March 31, 2016.": [[64, "Example-1b.-From-the-above-set-of-encounters,-take-a-subset-of-patients-who-were-discharged-between-April-1,-2015-and-March-31,-2016."]], "Example 1c. From the above set of encounters, get the total number of admissions for each hospital.": [[64, "Example-1c.-From-the-above-set-of-encounters,-get-the-total-number-of-admissions-for-each-hospital."]], "Example 2a. How many sodium tests were placed between Apr 1, 2015 and May 31, 2015 at hospital 101?": [[64, "Example-2a.-How-many-sodium-tests-were-placed-between-Apr-1,-2015-and-May-31,-2015-at-hospital-101?"]], "MIMIC-III tutorial": [[65, "MIMIC-III-tutorial"]], "Imports and instantiate MIMICIIIQuerier": [[65, "Imports-and-instantiate-MIMICIIIQuerier"]], "Example 1. Get all male patients with a mortality outcome.": [[65, "Example-1.-Get-all-male-patients-with-a-mortality-outcome."]], "Example 2. Get all female patient encounters with diagnoses (gastroenteritis in ICD-9 long title).": [[65, "Example-2.-Get-all-female-patient-encounters-with-diagnoses-(gastroenteritis-in-ICD-9-long-title)."]], "Example 3. Get potassium lab tests for female patients.": [[65, "Example-3.-Get-potassium-lab-tests-for-female-patients."]], "Example 4. Get AaDO2 carevue chart events for male patients that have a valuenum of less than 20.": [[65, "Example-4.-Get-AaDO2-carevue-chart-events-for-male-patients-that-have-a-valuenum-of-less-than-20."]], "MIMIC-IV tutorial": [[66, "MIMIC-IV-tutorial"]], "Imports and instantiate MIMICIVQuerier": [[66, "Imports-and-instantiate-MIMICIVQuerier"]], "Example 1. Get all patient admissions from 2021 or later (approx year of admission)": [[66, "Example-1.-Get-all-patient-admissions-from-2021-or-later-(approx-year-of-admission)"]], "Example 2. Get all patient encounters with diagnoses (schizophrenia in ICD-10 long title), in the year 2015.": [[66, "Example-2.-Get-all-patient-encounters-with-diagnoses-(schizophrenia-in-ICD-10-long-title),-in-the-year-2015."]], "Example 3. Advanced - uses ConditionRegexMatch from cyclops.query.ops. Get all patient encounters with diagnoses (ICD-9 long title contains schizophrenia and chronic ), in the year 2015.": [[66, "Example-3.-Advanced---uses-ConditionRegexMatch-from-cyclops.query.ops.-Get-all-patient-encounters-with-diagnoses-(ICD-9-long-title-contains-schizophrenia-and-chronic-),-in-the-year-2015."]], "Example 4. Get routine vital signs for patients from year 2015.": [[66, "Example-4.-Get-routine-vital-signs-for-patients-from-year-2015."]], "Example 5. Get hemoglobin lab tests for patients from year 2009.": [[66, "Example-5.-Get-hemoglobin-lab-tests-for-patients-from-year-2009."]], "Example 6. Get radiology reports and filter on keywords lymphadenopathy and infectious occurring together from year 2009.": [[66, "Example-6.-Get-radiology-reports-and-filter-on-keywords-lymphadenopathy-and-infectious-occurring-together-from-year-2009."]], "Example 7. Get all female patient encounters from year 2015, and return as dask dataframe (lazy evaluation) with 4 partitions (batches) aggregated based on subject_id.": [[66, "Example-7.-Get-all-female-patient-encounters-from-year-2015,-and-return-as-dask-dataframe-(lazy-evaluation)-with-4-partitions-(batches)-aggregated-based-on-subject_id."]], "Example 8. Running a raw SQL string.": [[66, "Example-8.-Running-a-raw-SQL-string."]], "OMOP tutorial": [[67, "OMOP-tutorial"]], "Imports and instantiate OMOPQuerier.": [[67, "Imports-and-instantiate-OMOPQuerier."], [67, "id1"]], "Example 1. Get all patient visits in or after 2010.": [[67, "Example-1.-Get-all-patient-visits-in-or-after-2010."]], "Example 2. Get measurements for all visits in or after 2020.": [[67, "Example-2.-Get-measurements-for-all-visits-in-or-after-2020."]], "Example 1. Get all patient visits that ended in a mortality outcome in or after 2010.": [[67, "Example-1.-Get-all-patient-visits-that-ended-in-a-mortality-outcome-in-or-after-2010."]], "Example 2. Get all measurements for female patient visits with sepsis diagnoses, that ended in a mortality outcome.": [[67, "Example-2.-Get-all-measurements-for-female-patient-visits-with-sepsis-diagnoses,-that-ended-in-a-mortality-outcome."]]}, "indexentries": {"cycquery.base": [[4, "module-cycquery.base"]], "module": [[4, "module-cycquery.base"], [6, "module-cycquery.eicu"], [8, "module-cycquery.gemini"], [10, "module-cycquery.interface"], [12, "module-cycquery.mimiciii"], [14, "module-cycquery.mimiciv"], [16, "module-cycquery.omop"], [18, "module-cycquery.ops"], [61, "module-cycquery"]], "datasetquerier (class in cycquery.base)": [[5, "cycquery.base.DatasetQuerier"]], "db (datasetquerier attribute)": [[5, "cycquery.base.DatasetQuerier.db"]], "get_table() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.get_table"]], "list_columns() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_columns"]], "list_custom_tables() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_custom_tables"]], "list_schemas() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_schemas"]], "list_tables() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_tables"]], "cycquery.eicu": [[6, "module-cycquery.eicu"]], "eicuquerier (class in cycquery.eicu)": [[7, "cycquery.eicu.EICUQuerier"]], "get_table() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.get_table"]], "list_columns() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_columns"]], "list_custom_tables() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_custom_tables"]], "list_schemas() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_schemas"]], "list_tables() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_tables"]], "cycquery.gemini": [[8, "module-cycquery.gemini"]], "geminiquerier (class in cycquery.gemini)": [[9, "cycquery.gemini.GEMINIQuerier"]], "care_units() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.care_units"]], "diagnoses() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.diagnoses"]], "get_table() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.get_table"]], "imaging() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.imaging"]], "ip_admin() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.ip_admin"]], "list_columns() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_columns"]], "list_custom_tables() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_custom_tables"]], "list_schemas() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_schemas"]], "list_tables() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_tables"]], "room_transfer() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.room_transfer"]], "cycquery.interface": [[10, "module-cycquery.interface"]], "queryinterface (class in cycquery.interface)": [[11, "cycquery.interface.QueryInterface"]], "__init__() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.__init__"]], "clear_data() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.clear_data"]], "data (queryinterface property)": [[11, "cycquery.interface.QueryInterface.data"]], "join() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.join"]], "ops() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.ops"]], "run() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.run"]], "save() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.save"]], "union() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.union"]], "union_all() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.union_all"]], "cycquery.mimiciii": [[12, "module-cycquery.mimiciii"]], "mimiciiiquerier (class in cycquery.mimiciii)": [[13, "cycquery.mimiciii.MIMICIIIQuerier"]], "chartevents() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.chartevents"]], "diagnoses() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.diagnoses"]], "get_table() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.get_table"]], "labevents() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.labevents"]], "list_columns() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_columns"]], "list_custom_tables() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_custom_tables"]], "list_schemas() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_schemas"]], "list_tables() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_tables"]], "cycquery.mimiciv": [[14, "module-cycquery.mimiciv"]], "mimicivquerier (class in cycquery.mimiciv)": [[15, "cycquery.mimiciv.MIMICIVQuerier"]], "chartevents() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.chartevents"]], "diagnoses() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.diagnoses"]], "get_table() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.get_table"]], "labevents() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.labevents"]], "list_columns() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_columns"]], "list_custom_tables() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_custom_tables"]], "list_schemas() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_schemas"]], "list_tables() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_tables"]], "patients() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.patients"]], "cycquery.omop": [[16, "module-cycquery.omop"]], "omopquerier (class in cycquery.omop)": [[17, "cycquery.omop.OMOPQuerier"]], "get_table() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.get_table"]], "list_columns() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_columns"]], "list_custom_tables() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_custom_tables"]], "list_schemas() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_schemas"]], "list_tables() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_tables"]], "map_concept_ids_to_name() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.map_concept_ids_to_name"]], "measurement() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.measurement"]], "observation() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.observation"]], "person() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.person"]], "visit_detail() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.visit_detail"]], "visit_occurrence() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.visit_occurrence"]], "cycquery.ops": [[18, "module-cycquery.ops"]], "addcolumn (class in cycquery.ops)": [[19, "cycquery.ops.AddColumn"]], "__call__() (addcolumn method)": [[19, "cycquery.ops.AddColumn.__call__"]], "adddeltacolumn (class in cycquery.ops)": [[20, "cycquery.ops.AddDeltaColumn"]], "__call__() (adddeltacolumn method)": [[20, "cycquery.ops.AddDeltaColumn.__call__"]], "adddeltaconstant (class in cycquery.ops)": [[21, "cycquery.ops.AddDeltaConstant"]], "__call__() (adddeltaconstant method)": [[21, "cycquery.ops.AddDeltaConstant.__call__"]], "addnumeric (class in cycquery.ops)": [[22, "cycquery.ops.AddNumeric"]], "__call__() (addnumeric method)": [[22, "cycquery.ops.AddNumeric.__call__"]], "and (class in cycquery.ops)": [[23, "cycquery.ops.And"]], "__call__() (and method)": [[23, "cycquery.ops.And.__call__"]], "apply (class in cycquery.ops)": [[24, "cycquery.ops.Apply"]], "__call__() (apply method)": [[24, "cycquery.ops.Apply.__call__"]], "cast (class in cycquery.ops)": [[25, "cycquery.ops.Cast"]], "__call__() (cast method)": [[25, "cycquery.ops.Cast.__call__"]], "conditionafterdate (class in cycquery.ops)": [[26, "cycquery.ops.ConditionAfterDate"]], "__call__() (conditionafterdate method)": [[26, "cycquery.ops.ConditionAfterDate.__call__"]], "conditionbeforedate (class in cycquery.ops)": [[27, "cycquery.ops.ConditionBeforeDate"]], "__call__() (conditionbeforedate method)": [[27, "cycquery.ops.ConditionBeforeDate.__call__"]], "conditionendswith (class in cycquery.ops)": [[28, "cycquery.ops.ConditionEndsWith"]], "__call__() (conditionendswith method)": [[28, "cycquery.ops.ConditionEndsWith.__call__"]], "conditionequals (class in cycquery.ops)": [[29, "cycquery.ops.ConditionEquals"]], "__call__() (conditionequals method)": [[29, "cycquery.ops.ConditionEquals.__call__"]], "conditiongreaterthan (class in cycquery.ops)": [[30, "cycquery.ops.ConditionGreaterThan"]], "__call__() (conditiongreaterthan method)": [[30, "cycquery.ops.ConditionGreaterThan.__call__"]], "conditionin (class in cycquery.ops)": [[31, "cycquery.ops.ConditionIn"]], "__call__() (conditionin method)": [[31, "cycquery.ops.ConditionIn.__call__"]], "conditioninmonths (class in cycquery.ops)": [[32, "cycquery.ops.ConditionInMonths"]], "__call__() (conditioninmonths method)": [[32, "cycquery.ops.ConditionInMonths.__call__"]], "conditioninyears (class in cycquery.ops)": [[33, "cycquery.ops.ConditionInYears"]], "__call__() (conditioninyears method)": [[33, "cycquery.ops.ConditionInYears.__call__"]], "conditionlessthan (class in cycquery.ops)": [[34, "cycquery.ops.ConditionLessThan"]], "__call__() (conditionlessthan method)": [[34, "cycquery.ops.ConditionLessThan.__call__"]], "conditionlike (class in cycquery.ops)": [[35, "cycquery.ops.ConditionLike"]], "__call__() (conditionlike method)": [[35, "cycquery.ops.ConditionLike.__call__"]], "conditionregexmatch (class in cycquery.ops)": [[36, "cycquery.ops.ConditionRegexMatch"]], "__call__() (conditionregexmatch method)": [[36, "cycquery.ops.ConditionRegexMatch.__call__"]], "conditionstartswith (class in cycquery.ops)": [[37, "cycquery.ops.ConditionStartsWith"]], "__call__() (conditionstartswith method)": [[37, "cycquery.ops.ConditionStartsWith.__call__"]], "conditionsubstring (class in cycquery.ops)": [[38, "cycquery.ops.ConditionSubstring"]], "__call__() (conditionsubstring method)": [[38, "cycquery.ops.ConditionSubstring.__call__"]], "distinct (class in cycquery.ops)": [[39, "cycquery.ops.Distinct"]], "__call__() (distinct method)": [[39, "cycquery.ops.Distinct.__call__"]], "drop (class in cycquery.ops)": [[40, "cycquery.ops.Drop"]], "__call__() (drop method)": [[40, "cycquery.ops.Drop.__call__"]], "dropempty (class in cycquery.ops)": [[41, "cycquery.ops.DropEmpty"]], "__call__() (dropempty method)": [[41, "cycquery.ops.DropEmpty.__call__"]], "dropnulls (class in cycquery.ops)": [[42, "cycquery.ops.DropNulls"]], "__call__() (dropnulls method)": [[42, "cycquery.ops.DropNulls.__call__"]], "extracttimestampcomponent (class in cycquery.ops)": [[43, "cycquery.ops.ExtractTimestampComponent"]], "__call__() (extracttimestampcomponent method)": [[43, "cycquery.ops.ExtractTimestampComponent.__call__"]], "fillnull (class in cycquery.ops)": [[44, "cycquery.ops.FillNull"]], "__call__() (fillnull method)": [[44, "cycquery.ops.FillNull.__call__"]], "groupbyaggregate (class in cycquery.ops)": [[45, "cycquery.ops.GroupByAggregate"]], "__call__() (groupbyaggregate method)": [[45, "cycquery.ops.GroupByAggregate.__call__"]], "join (class in cycquery.ops)": [[46, "cycquery.ops.Join"]], "__call__() (join method)": [[46, "cycquery.ops.Join.__call__"]], "keep (class in cycquery.ops)": [[47, "cycquery.ops.Keep"]], "__call__() (keep method)": [[47, "cycquery.ops.Keep.__call__"]], "limit (class in cycquery.ops)": [[48, "cycquery.ops.Limit"]], "__call__() (limit method)": [[48, "cycquery.ops.Limit.__call__"]], "literal (class in cycquery.ops)": [[49, "cycquery.ops.Literal"]], "__call__() (literal method)": [[49, "cycquery.ops.Literal.__call__"]], "or (class in cycquery.ops)": [[50, "cycquery.ops.Or"]], "__call__() (or method)": [[50, "cycquery.ops.Or.__call__"]], "orderby (class in cycquery.ops)": [[51, "cycquery.ops.OrderBy"]], "__call__() (orderby method)": [[51, "cycquery.ops.OrderBy.__call__"]], "queryop (class in cycquery.ops)": [[52, "cycquery.ops.QueryOp"]], "__call__() (queryop method)": [[52, "cycquery.ops.QueryOp.__call__"]], "randomizeorder (class in cycquery.ops)": [[53, "cycquery.ops.RandomizeOrder"]], "__call__() (randomizeorder method)": [[53, "cycquery.ops.RandomizeOrder.__call__"]], "rename (class in cycquery.ops)": [[54, "cycquery.ops.Rename"]], "__call__() (rename method)": [[54, "cycquery.ops.Rename.__call__"]], "reorder (class in cycquery.ops)": [[55, "cycquery.ops.Reorder"]], "__call__() (reorder method)": [[55, "cycquery.ops.Reorder.__call__"]], "reorderafter (class in cycquery.ops)": [[56, "cycquery.ops.ReorderAfter"]], "__call__() (reorderafter method)": [[56, "cycquery.ops.ReorderAfter.__call__"]], "sequential (class in cycquery.ops)": [[57, "cycquery.ops.Sequential"]], "__add__() (sequential method)": [[57, "cycquery.ops.Sequential.__add__"]], "__call__() (sequential method)": [[57, "cycquery.ops.Sequential.__call__"]], "__init__() (sequential method)": [[57, "cycquery.ops.Sequential.__init__"]], "append() (sequential method)": [[57, "cycquery.ops.Sequential.append"]], "extend() (sequential method)": [[57, "cycquery.ops.Sequential.extend"]], "insert() (sequential method)": [[57, "cycquery.ops.Sequential.insert"]], "pop() (sequential method)": [[57, "cycquery.ops.Sequential.pop"]], "substring (class in cycquery.ops)": [[58, "cycquery.ops.Substring"]], "__call__() (substring method)": [[58, "cycquery.ops.Substring.__call__"]], "trim (class in cycquery.ops)": [[59, "cycquery.ops.Trim"]], "__call__() (trim method)": [[59, "cycquery.ops.Trim.__call__"]], "union (class in cycquery.ops)": [[60, "cycquery.ops.Union"]], "__call__() (union method)": [[60, "cycquery.ops.Union.__call__"]], "cycquery": [[61, "module-cycquery"]]}})